// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Profile {
  id       String @id @default(uuid())
  userId   String @unique
  name     String
  imageUrl String @db.Text
  email    String @db.Text

  servers Server[]
  members Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Server {
  id         String @id @default(uuid())
  name       String
  imageUrl   String @db.Text
  inviteCode String @db.Text

  profileId  String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  @@index([profileId])

  members Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id String @id @default(uuid())
  role MemberRole @default(GUEST)

  profileId  String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  @@index([profileId])

  serverId String
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)
  @@index([serverId])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id String @id @default(uuid())
  name String
  type ChannelType @default(TEXT)

  profileId  String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  @@index([profileId])

  serverId String
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)
  @@index([serverId])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
